# -*- coding: utf-8 -*-
"""WeatherReport

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OHySOttwA6F0vm7GDsm3y95MXoS5hS_3
"""
"""
modify settings.json to have this!
{
    "terminal.integrated.defaultProfile.windows": "Command Prompt",
    "terminal.external.windowsExec": "C:\\Windows\\System32\\cmd.exe",
    "terminal.explorerKind": "external",
    "python.defaultInterpreterPath": "C:\\Users\\ONGAZ\\AppData\\Local\\Programs\\Python\\Python313\\python.exe"
}

"""
# pip install meteostat

import pandas as pd
# Import Meteostat library and dependencies
from datetime import datetime
import matplotlib.pyplot as plt
from meteostat import Point, Daily
import ssl

# Create default SSL context to bypass SSL Certificate Verification Issues
ssl._create_default_https_context = ssl._create_unverified_context

locode = pd.read_excel("LOCODE.xlsx")

# Set time period
START = datetime(2025, 2, 1)
END = datetime(2025, 3, 1)

weather_data = pd.DataFrame()
locode.head()

for index, row in locode.iterrows():
  # Create Point for Port
  port = Point(float(row["Latitude"]), float(row["Longitude"]))

  # Get weekly data for 2024
  data = Daily(port, START,END)
  try:
    data = data.normalize()
    # data = data.aggregate("W-MON")
    data = data.fetch()
    data = data[data.index.to_series().between(START,END)]
    data["LOCODE"] = row["LOCODE"]
  except KeyError:
    continue

  weather_data = pd.concat([weather_data,data])

weather_data.head()

weather_data.to_csv('weather' + datetime.today().strftime('%d%m%Y') + '.csv')

"""# Visualisation"""

START = datetime(2024, 1, 1)
END = datetime(2024, 12, 31)

# Create Point for Shanghai
port = Point(31.366365, 121.61475)

# Get weekly data for 2024
data = Daily(port, START,END)
data = data.normalize()
data = data.aggregate("W-SUN")
data = data.fetch()
data = data[data.index.to_series().between(START,END)]

data.tail()

# Plot line chart for wind speed
data.plot(y=['wspd'])
plt.title("Average Wind Speed at Shanghai Port (CNSHA)")
plt.xlabel("Date")
plt.ylabel("Average Wind Speed (km/h)")
plt.show()



# plot line chart for air pressure
data.plot(y=['pres'])
plt.title("Average Sea Level Air Pressure at Shanghai Port (CNSHA)")
plt.xlabel("Date")
plt.ylabel("Average Air Pressure (hPa)")
plt.show()

#Set plot size
fig, ax1 = plt.subplots(figsize=(10,6))

#plot wind speed
ax1.plot(data['wspd'],color = 'blue')
ax1.set_xlabel("Date")
ax1.set_ylabel("Average Wind Speed (km/h)")
ax1.tick_params(axis='y',labelcolor='blue')

#plot air pressure
ax2 = ax1.twinx()
ax2.plot(data['pres'],color = 'red')
ax2.set_ylabel("Average Air Pressure (hPa)")
ax2.tick_params(axis='y',labelcolor='red')

#set title, gridlines
plt.title("Average Wind Speed and Sea Level Air Pressure at Port Shanghai")
ax1.grid(linestyle="--",alpha=0.7)

plt.show()

#Load daily weather data of Port Hedland (AUPHE)
port_hedland = Point(-20.31, 118.601111) #lat-lon coordinates
start = datetime(2025, 2, 1)
end = datetime(2025, 3, 15)
data = Daily(port_hedland, start, end)
data = data.normalize()
data = data.fetch()

#Set plot size
fig, ax1 = plt.subplots(figsize=(10,6))

#plot wind speed
ax1.plot(data['wspd'],color = 'blue')
ax1.set_xlabel("Date")
ax1.set_ylabel("Average Wind Speed (km/h)")
ax1.tick_params(axis='y',labelcolor='blue')

#plot air pressure
ax2 = ax1.twinx()
ax2.plot(data['pres'],color = 'red')
ax2.set_ylabel("Average Air Pressure (hPa)")
ax2.tick_params(axis='y',labelcolor='red')

#set title, gridlines
plt.title("Average Wind Speed and Sea Level Air Pressure at Port Hedland")
ax1.grid(linestyle="--",alpha=0.7)

plt.show()